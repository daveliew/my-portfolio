{
  "learningPaths": [
    {
      "id": "llm-handling",
      "title": "LLM Handling Learning Path",
      "description": "A comprehensive roadmap for mastering large language models in practical applications",
      "overview": "This learning path focuses on developing the skills needed to effectively utilize large language models across various applications and workflows.",
      "objectives": [
        "Effectively communicate with AI models through well-crafted prompts",
        "Integrate AI capabilities into existing applications and workflows",
        "Understand LLM limitations and implement appropriate guardrails",
        "Design hybrid human-AI workflows that maximize the strengths of both",
        "Evaluate and select the right models for specific use cases"
      ],
      "metadata": {
        "level": "Beginner to Intermediate",
        "duration": "4-6 weeks",
        "prerequisites": ["Basic programming knowledge", "Familiarity with API concepts"],
        "targetAudience": ["Developers", "Content creators", "Business analysts", "Product managers"]
      },
      "phases": [
        {
          "title": "Phase 1: Fundamentals",
          "description": "Build a solid foundation in understanding how LLMs work and how to interact with them effectively.",
          "modules": [
            {
              "title": "Understanding LLMs",
              "topics": [
                "Basic concepts: tokens, parameters, temperature, context window",
                "Model capabilities and limitations",
                "Different model architectures and their strengths"
              ]
            },
            {
              "title": "Prompt Engineering Basics",
              "topics": [
                "Crafting clear instructions",
                "Using examples (few-shot learning)",
                "Basic prompt patterns and templates"
              ]
            },
            {
              "title": "Suggested Resources",
              "topics": [
                "OpenAI Documentation",
                "Prompt Engineering Guide by Anthropic",
                "Learn Prompting website"
              ]
            }
          ]
        },
        {
          "title": "Phase 2: Integration & Application",
          "description": "Learn how to incorporate LLMs into applications and existing workflows.",
          "modules": [
            {
              "title": "API Integration",
              "topics": [
                "Setting up API access to various models",
                "Managing API costs and rate limits",
                "Error handling and fallback strategies"
              ]
            },
            {
              "title": "Building Basic AI Features",
              "topics": [
                "Content generation capabilities",
                "Data extraction and summarization",
                "Conversation management"
              ]
            },
            {
              "title": "Suggested Projects",
              "topics": [
                "Build a simple chatbot",
                "Create a content summarization tool",
                "Implement a simple data extraction system"
              ]
            }
          ]
        },
        {
          "title": "Phase 3: Advanced Techniques",
          "description": "Master advanced techniques for optimizing LLM performance in complex scenarios.",
          "modules": [
            {
              "title": "Advanced Prompt Engineering",
              "topics": [
                "Chain-of-thought prompting",
                "ReAct pattern implementation",
                "System and user message design"
              ]
            },
            {
              "title": "Enhancing Reliability",
              "topics": [
                "Output validation and correction",
                "Implementing guardrails",
                "Handling hallucinations and misinformation"
              ]
            },
            {
              "title": "Model Fine-tuning",
              "topics": [
                "When and why to fine-tune models",
                "Creating effective training datasets",
                "Evaluating fine-tuned models"
              ]
            }
          ]
        }
      ],
      "process": [
        "Spend 1-2 weeks on each phase",
        "Complete at least one project in each phase before moving on",
        "Document your learnings and challenges",
        "Join communities like Hugging Face and AI Discord servers to share experiences"
      ],
      "links": {
        "previous": "/ai-journey/how-to-learn/overview",
        "next": "/ai-journey/how-to-learn/agent-rag"
      }
    },
    {
      "id": "agent-rag",
      "title": "Agent & RAG Learning Path",
      "description": "Build intelligent agents and implement Retrieval Augmented Generation for more capable AI systems",
      "overview": "This advanced learning path focuses on building autonomous agents and retrieval-augmented generation (RAG) systems for sophisticated AI applications.",
      "objectives": [
        "Build AI agents that can perform complex, multi-step tasks",
        "Implement effective RAG systems for knowledge-intensive applications",
        "Design and deploy multi-agent systems for collaborative tasks",
        "Integrate external tools and APIs with agents",
        "Create memory and knowledge retrieval systems for AI applications"
      ],
      "metadata": {
        "level": "Intermediate to Advanced",
        "duration": "6-8 weeks",
        "prerequisites": [
          "Solid understanding of LLM capabilities and limitations",
          "Experience with API integration",
          "Basic knowledge of vector databases",
          "Programming proficiency in Python or JavaScript"
        ],
        "targetAudience": ["AI developers", "Data engineers", "Solution architects", "ML engineers"]
      },
      "phases": [
        {
          "title": "Phase 1: Agent Fundamentals",
          "description": "Understand the core concepts of AI agents and their implementation.",
          "modules": [
            {
              "title": "Agent Architecture",
              "topics": [
                "Core components of an AI agent",
                "Agent models (reactive, goal-based, utility-based)",
                "Planning and execution frameworks"
              ]
            },
            {
              "title": "Frameworks & Tools",
              "topics": [
                "LangChain vs. CrewAI",
                "AutoGPT and BabyAGI",
                "Setting up development environments"
              ]
            },
            {
              "title": "Basic Agent Implementation",
              "topics": [
                "Creating a single-task agent",
                "Tool and API integration",
                "Testing and debugging agents"
              ]
            }
          ]
        },
        {
          "title": "Phase 2: Retrieval Augmented Generation",
          "description": "Master the techniques for augmenting LLMs with external knowledge.",
          "modules": [
            {
              "title": "Knowledge Representation",
              "topics": [
                "Vector embeddings and semantic search",
                "Document chunking strategies",
                "Metadata and filtering"
              ]
            },
            {
              "title": "Vector Databases",
              "topics": [
                "Setting up Pinecone, Weaviate, or Chroma",
                "Indexing and querying vector databases",
                "Hybrid search techniques"
              ]
            },
            {
              "title": "RAG Implementation",
              "topics": [
                "Building a basic RAG pipeline",
                "Query reformulation techniques",
                "Evaluating RAG quality"
              ]
            }
          ]
        },
        {
          "title": "Phase 3: Advanced Agent Systems",
          "description": "Build sophisticated multi-agent systems with memory and advanced capabilities.",
          "modules": [
            {
              "title": "Multi-Agent Systems",
              "topics": [
                "Agent roles and specialization",
                "Inter-agent communication",
                "Orchestration and coordination"
              ]
            },
            {
              "title": "Memory Systems",
              "topics": [
                "Short-term and long-term memory",
                "Contextual recall mechanisms",
                "Memory indexing and retrieval"
              ]
            },
            {
              "title": "Capstone Project",
              "topics": [
                "Design a complex agent system with RAG capabilities",
                "Implement evaluation metrics",
                "Deploy and monitor the system"
              ]
            }
          ]
        }
      ],
      "process": [
        "Complete each phase sequentially",
        "Build increasingly complex projects as you progress",
        "Focus on a specific domain application (e.g., customer service, research assistant)",
        "Continuously evaluate and refine your implementations"
      ],
      "links": {
        "previous": "/ai-journey/how-to-learn/llm-handling",
        "next": "/ai-journey/portfolio"
      }
    },
    {
      "id": "technical-leadership",
      "title": "Three-Hat Technical Leadership Framework",
      "description": "Master the integration of systems architecture, product management, and hands-on implementation for comprehensive AI solutions",
      "overview": "This advanced learning path teaches you to seamlessly switch between three critical perspectives: Systems Architect (big picture), Product Manager (value optimization), and Implementation (delivery excellence). Based on hard-won insights from real-world AI projects.",
      "objectives": [
        "Develop systems thinking to prevent technical debt and complexity explosion",
        "Master data-driven product management for AI features",
        "Build robust implementation practices with quality gates and monitoring",
        "Learn to context-switch effectively between the three hats",
        "Apply the framework to deliver fractional CTO-level value"
      ],
      "metadata": {
        "level": "Intermediate to Advanced",
        "duration": "8-10 weeks",
        "prerequisites": [
          "Experience building and deploying AI applications",
          "Basic understanding of software architecture",
          "Some exposure to product management concepts",
          "Willingness to learn from failures and iterate"
        ],
        "targetAudience": ["Technical leaders", "Senior developers", "AI consultants", "Aspiring fractional CTOs"]
      },
      "phases": [
        {
          "title": "Phase 1: The Systems Architect Hat",
          "description": "Learn to think in systems, architectures, and scalable designs that prevent future problems.",
          "modules": [
            {
              "title": "Foundation First Thinking",
              "topics": [
                "The Pareto principle in architecture (80/20 rule)",
                "Identifying the core 20% that delivers 80% value",
                "Building modular, extensible systems from the start"
              ]
            },
            {
              "title": "Scalability & Complexity Management",
              "topics": [
                "The 10x scalability question framework",
                "Monitoring complexity before it explodes (69→10 tools lesson)",
                "Chaos engineering principles for AI systems"
              ]
            },
            {
              "title": "Technical Debt Prevention",
              "topics": [
                "Early warning signs of architectural problems",
                "Protocol compliance as business risk (the $50K stdout lesson)",
                "Building in flexibility without over-engineering"
              ]
            }
          ]
        },
        {
          "title": "Phase 2: The Product Manager Hat",
          "description": "Optimize for user value, business impact, and data-driven decision making.",
          "modules": [
            {
              "title": "User Journey Optimization",
              "topics": [
                "Time-to-first-success metrics (<2 min onboarding)",
                "Identifying and removing friction points",
                "Building user feedback loops into AI systems"
              ]
            },
            {
              "title": "Data-Driven AI Features",
              "topics": [
                "Usage analytics that drive architecture decisions",
                "Feature lifecycle: Discovery → Experimentation → Optimization",
                "Measuring actual vs perceived value"
              ]
            },
            {
              "title": "Business Impact Alignment",
              "topics": [
                "Translating technical capabilities to business outcomes",
                "ROI measurement for AI implementations",
                "Prioritization frameworks for AI features"
              ]
            }
          ]
        },
        {
          "title": "Phase 3: The Implementation Hat",
          "description": "Excellence in delivery through quality gates, automation, and continuous improvement.",
          "modules": [
            {
              "title": "Quality Gates & Testing",
              "topics": [
                "CI/CD pipelines for AI applications",
                "Testing strategies for non-deterministic systems",
                "Monitoring beyond uptime - the metrics that matter"
              ]
            },
            {
              "title": "Developer Experience",
              "topics": [
                "One-command setup philosophy",
                "Hot reload and rapid iteration for AI development",
                "Documentation that developers actually use"
              ]
            },
            {
              "title": "Continuous Improvement",
              "topics": [
                "Weekly metrics → monthly architecture reviews",
                "Learning from production incidents",
                "Building improvement culture in AI teams"
              ]
            }
          ]
        },
        {
          "title": "Phase 4: Framework Integration",
          "description": "Apply all three hats together for comprehensive technical leadership.",
          "modules": [
            {
              "title": "Context Switching Mastery",
              "topics": [
                "When to wear which hat",
                "Rapid perspective switching in meetings",
                "Balancing competing priorities across hats"
              ]
            },
            {
              "title": "Technical Leadership Audits",
              "topics": [
                "The comprehensive health check framework",
                "Architecture assessment in Week 1-2",
                "Operational excellence design in Week 3-4",
                "Growth preparation in Week 5-6"
              ]
            },
            {
              "title": "Client Delivery Excellence",
              "topics": [
                "Positioning as a fractional CTO",
                "Demonstrating value through the framework",
                "Building long-term client relationships"
              ]
            }
          ]
        }
      ],
      "process": [
        "Start with self-assessment: Which hat do you naturally wear most?",
        "Focus on strengthening your weakest hat first",
        "Apply the framework to a real project throughout the learning process",
        "Document your 'hard lessons learned' as you go",
        "Share insights with the community to reinforce learning"
      ],
      "links": {
        "previous": "/ai-journey/how-to-learn/agent-rag",
        "next": "/ai-journey/portfolio"
      }
    }
  ]
} 